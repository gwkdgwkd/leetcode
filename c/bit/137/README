第137题

1.描述
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。
说明：
你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
示例 1:
输入: [2,2,3,2]
输出: 3
示例 2:
输入: [0,1,0,1,0,1,99]
输出: 99

2.思路
二进制下不考虑进位的加法：本题为136的拓展，136题中我们用到了异或运算。
实际上，异或运算的含义是二进制下不考虑进位的加法，即：
0 | 0 = 0 + 0 = 0, 
0 | 1 = 0 + 1 = 1, 
1 | 0 = 1 + 0 = 1, 
1 | 1 = 1 + 1 = 0（不进位）, 
三进制下不考虑进位的加法：通过定义某种运算#，使得
0 # 1 = 1，
1 # 1 = 2，
2 # 1 = 0。
在此运算规则下，出现了3次的数字的二进制所有位全部抵消为0，而留下只出现1次的数字二进制对应位为1。
因此，在此运算规则下将整个arr中数字遍历加和，留下来的结果则为只出现1次的数字。


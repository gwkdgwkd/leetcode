/*
给两个正整数n和limit。
请将n颗糖果分给3位小朋友，确保没有任何小朋友得到超过limit颗糖果，
请返回满足此条件下的总方案数。

示例1：
输入：n = 5, limit = 2
输出：3
解释：总共有3种方法分配5颗糖果，且每位小朋友的糖果数不超过2：
     (1, 2, 2)，(2, 1, 2)和(2, 2, 1)。

示例2：
输入：n = 3, limit = 3
输出：10
解释：总共有10种方法分配3颗糖果，且每位小朋友的糖果数不超过3：
     (0, 0, 3)，(0, 1, 2)，(0, 2, 1)，(0, 3, 0)，
     (1, 0, 2)，(1, 1, 1)，(1, 2, 0)，(2, 0, 1)，
     (2, 1, 0)和(3, 0, 0)。


提示：
1 <= n <= 10^6
1 <= limit <= 10^6
*/

// 容斥原理
class Solution {
  long long c2(long long n) { return n > 1 ? n * (n - 1) / 2 : 0; }

 public:
  long long distributeCandies(int n, int limit) {
    return c2(n + 2) - 3 * c2(n - limit + 1) + 3 * c2(n - 2 * limit) -
           c2(n - 3 * limit - 1);
  }
};
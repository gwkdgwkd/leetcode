/*
有一个地窖，地窖中有nxm个房间，它们呈网格状排布。
给一个大小为nxm的二维数组moveTime，其中moveTime[i][j]表示在这个时刻以后才可以开始往这个房间移动。
在时刻t=0时从房间(0,0)出发，每次可以移动到相邻的一个房间。在相邻房间之间移动需要的时间为1秒。
请返回到达房间(n-1,m-1)所需要的最少时间。
如果两个房间有一条公共边（可以是水平的也可以是竖直的），那么我们称这两个房间是相邻的。

示例1：
输入：moveTime = [[0,4],[4,4]]
输出：6
解释：需要花费的最少时间为6秒。
     在时刻t == 4，从房间(0, 0)移动到房间(1, 0)，花费1秒。
     在时刻t == 5，从房间(1, 0)移动到房间(1, 1)，花费1秒。

示例2：
输入：moveTime = [[0,0,0],[0,0,0]]
输出：3
解释：需要花费的最少时间为3秒。
     在时刻t == 0，从房间(0, 0)移动到房间(1, 0)，花费1秒。
     在时刻t == 1，从房间(1, 0)移动到房间(1, 1)，花费1秒。
     在时刻t == 2，从房间(1, 1)移动到房间(1, 2)，花费1秒。

示例3：
输入：moveTime = [[0,1],[1,2]]
输出：3


提示：
2 <= n == moveTime.length <= 50
2 <= m == moveTime[i].length <= 50
0 <= moveTime[i][j] <= 10^9
*/

